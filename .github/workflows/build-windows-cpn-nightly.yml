name: Do Windows nightly Companion

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build
      
    #- name: Install Qt
    #  uses: jurplel/install-qt-action@v2
    #  with:
    #    version: '5.12.9'
        
    #- name: Install dependencies
    #  run: python -m pip install --upgrade pip Pillow
      
   # - name: Install ARM toolchain
   #   uses: fiam/arm-none-eabi-gcc@v1
   #   with:
   #     release: '6-2017-q2'   

    - name: download libSDL
      uses: suisei-cn/actions-download-file@v1
      id: downloadfile  # Remember to give an ID if you need the output filename
      with:
        url: "http://www.libsdl.org/release/SDL-devel-1.2.15-VC.zip"
        target: ${{github.workspace}}
             
    - name: Install libDSL
      run: 7z e SDL-devel-1.2.15-VC.zip -o"C:\Program Files" -y &&
            dir  "C:\Program Files" &&
            move "C:\Program Files\SDL-1.2.15" "C:\Program Files\SDL"
    
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_DEPLOYMENT_TARGET='10.9'

    - name: Build
      working-directory: ${{github.workspace}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: mkdir ${{github.workspace}}/output && tools/build-companion-nightly.sh ${{github.workspace}}  ${{github.workspace}}/output/

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
       name: companion-nightly
       path:  ${{github.workspace}}/output
       retention-days: 1

